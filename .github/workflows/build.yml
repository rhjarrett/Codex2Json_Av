name: Build and Package Avalonia App

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release --no-restore

      - name: Publish Windows Installer
        if: matrix.os == 'windows-latest'
        run: |
          dotnet publish -r win-x64 -c Release --self-contained true -p:PublishSingleFile=true -o ./publish/win
          Compress-Archive -Path ./publish/win/* -DestinationPath Codex2Json-Windows.zip

      - name: Publish Linux Installer
        if: matrix.os == 'ubuntu-latest'
        run: |
          dotnet publish -r linux-x64 -c Release --self-contained true -p:PublishSingleFile=true -o ./publish/linux
          tar -czvf Codex2Json-Linux.tar.gz -C ./publish/linux .

      - name: Publish macOS Installer
        if: matrix.os == 'macos-latest'
        run: |
          dotnet publish -r osx-x64 -c Release --self-contained true -p:PublishSingleFile=true -o ./publish/macos
          tar -czvf Codex2Json-MacOS.tar.gz -C ./publish/macos .

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Codex2Json-Windows
          path: Codex2Json-Windows.zip

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Codex2Json-Linux
          path: Codex2Json-Linux.tar.gz

      - name: Upload macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Codex2Json-MacOS
          path: Codex2Json-MacOS.tar.gz
